package JAVA;

public class L35 {
	
/*
-바이트 코드 파일 : 자바 소스 파일을 javac 명령어로 컴파일한 파일을 말합니다.
-자바 개발 도구(JVM) : 자바 가상 기계는 바이트 코드 파일을 운영체제를 위한 완전한 기계어로 번역하고 실행하는 역할을 합니다. JVM은 java 명령어에 의해 구동됩니다.
					   프로그램에 필요한 자바 가상 기계(JVM), 라이브러리 API, 컴파일러 등의 개발 도구가 포함된 소프트웨어 패키지입니다.
-자바 실행 환경(JRE) : 자바 프로그램 실행에 필요한 자바 가상 기계(JVM), 라이브러리 API가 포함된 소프트웨어 패키지
-클래스 선언 : 자바 소스 파일은 클래스 선언부와 클래스 블록으로 구성됩니다. 이렇게 작성하는 것을 클래스 선언이라고 합니다.
-main() 메소드 : java 명령어로 바이트 코드 파일을 실행하면 제일 먼저 main()메소드를 찾아 블록 내부를 실행합니다. 그래서 main()메소드를 프로그램
				 실행 진입점이라고 부릅니다.
-주석 : 주석은 프러그램 실행과는 상관없이 코드에 설명을 붙인 것을 말합니다. 주석은 컴파일러 과정에서 무시되고 실행문만 바이트 코드로 번역됩니다.
-실행문 : 변수 선언, 값 저장, 메소드 호출에 해당하는 코드를 말합니다. 실행문 끝에는 세미콜론(;)을 붙여야 합니다.
-메소드 : 어떤 일을 처리하는 실행문들을 모아 놓은 블록
-메소드 호출 : 메소드를 코드 내에서 사용하는 것
-통합 개발 환경(IDE) : 프로젝트 생성, 자동 코드 완성, 디버깅 기능을 제공하는 환경ex)이클립스(자바), 비쥬얼스튜디오(C/C++)
-디버깅 : 모의 실행을 해서 코드의 오류를 찾는 행위
-자바 가상 기계(JVM) : 자바 프로그램은 완전한 기계어가 아닌 중간 단계의 바이트 코드이기 때문에, 이것을 해석하고 실행할 수 있게 해주는 가상의 운영체제 입니다.


※JVM의 메모리 영역
-메소드 영역 : 클래스(~.class)들을 클래스 로더로 읽어 클래스별로 런타입 상수 풀, 필드 데이터, 메소드 데이터, 생성자 코드 등을 분류해서 저장한다.
-힙 영역 : 객체와 배열이 생성되는 영역, JVM 스택 영역에서 생성된 변수나 다른 객체의 필드에서 이 곳에 있는 객체와 배열을 참조한다.
-JVM 스택 영역 : 스레드마다 하나씩 존재한다. 스레드가 시작할 때마다 JVM 스택 영역이 할당된다.
*/

/*
-기본적으로 소스 파일과 바이트 코드 파일이 저장되는 폴더가 다르다
-자바 소스 파일을 작성하는 폴더는 src이다.
-올바르게 작성된 소스 파일을 저장하면 자동으로 컴파일되고, 바이트 코드 파일이 생성된다.

※이클립스에서 바이트 코드 파일을 실행하는 방법
1. Package Explorer뷰에서 소스 파일을 선택하고, 툴 바에서 Run 아이콘을 클릭한다.
2. Package Explorer뷰에서 소스 파일 선택을 선택하고, 마우스 오른쪽 버튼을 클릭한 후 [Run As]-[Java Application]을 선택한다.
*/

}